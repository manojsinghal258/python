class tree():
  def __init__(self, val=None, left=None, right=None):
    self.val=val
    self.left=left
    self.right=right
  
  def __str__(self):
    return f'{self.val}'

  def add(self,new):
    if not self.val:
      self.val=new
      print ("adding %r"%new)
    else:      
      Q1 = [self]
      while Q1:
        current = Q1.pop(0)
        if current.left:
          Q1.append(current.left)
        else:
          current.left = tree(new)
          return
        
        if current.right:
          Q1.append(current.right)
        else:
          current.right = tree(new)
          return
def traversetree (node=None):
  if not node:
    return None
  else:
    print(node.val)
    traversetree(node.left)
    traversetree(node.right)
      
def maxdepth(node = None):
  if not node:
    return 0
  else:
    return (max(maxdepth(node.left),maxdepth(node.right))+1)
     


tt = tree(1)
tt.add(2)
tt.add(3)
tt.add(4)
tt.add(5)
print (tt)
print (tt.left, tt.right)
print (tt.left.left,tt.left.right, tt.right.left,tt.right.right)


traversetree(tt)
print ("tree height is %r"%maxdepth(tt))
